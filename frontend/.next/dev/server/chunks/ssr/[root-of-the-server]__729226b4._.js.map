{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SAMKIEL/CODEX/Practise/React%20Projects/samkiel-bot-deployment/frontend/lib/auth.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  // Custom logout function\r\n  const logout = (reason = \"Manual logout\") => {\r\n    console.warn(\"üî¥ Logging out triggered:\", reason);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    setUser(null);\r\n    setToken(null);\r\n    toast.success(`Logged out successfully.`, { duration: 3000 });\r\n    router.push(\"/login\");\r\n  };\r\n\r\n  // Login function\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      console.log(\"üü¢ Logging in...\");\r\n      const response = await fetch(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/login`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ identifier, password }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // ‚úÖ Extract token and user correctly from backend structure\r\n        const { data: responseData } = data; // successResponse wraps the result in data\r\n        const token = responseData?.token;\r\n        const user = responseData;\r\n\r\n        if (!token) {\r\n          console.error(\"‚ùå No token returned from backend:\", data);\r\n          toast.error(\"Login failed: no token received from server\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"‚úÖ Token received:\", token);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setToken(token);\r\n        setUser(user);\r\n\r\n        toast.success(`Welcome back, ${user.username}!`);\r\n        console.log(\"‚úÖ User successfully logged in:\", user.username);\r\n\r\n        router.push(\"/dashboard\");\r\n        return user;\r\n      } else {\r\n        throw new Error(JSON.stringify(data));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Login error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      console.log(\"üü¢ Registering...\");\r\n      const response = await fetch(\r\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/register`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(userData),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // ‚úÖ Extract token and user correctly from backend structure\r\n        const { data: responseData } = data; // successResponse wraps the result in data\r\n        const token = responseData?.token;\r\n        const user = responseData;\r\n\r\n        if (!token) {\r\n          console.error(\"‚ùå No token returned from backend:\", data);\r\n          toast.error(\"Registration failed: no token received from server\");\r\n          return null;\r\n        }\r\n\r\n        console.log(\"‚úÖ Token received:\", token);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setToken(token);\r\n        setUser(user);\r\n\r\n        console.log(\"‚úÖ User successfully registered:\", user.username);\r\n\r\n        router.push(\"/dashboard\");\r\n        return user;\r\n      } else {\r\n        const err = data;\r\n        switch (err?.code) {\r\n          case \"username_exists\":\r\n            toast.error(\"Person don fes u use that Username!\");\r\n            break;\r\n          case \"email_exists\":\r\n            toast.error(\"Gadus don dey use that email!\");\r\n            break;\r\n          case \"whatsappNumber_exists\":\r\n            toast.error(\"this number don dey linked already, try another one!\");\r\n            break;\r\n          case \"validation_error\":\r\n            toast.error(`Validation error: ${err.message}`);\r\n            break;\r\n          default:\r\n            toast.error(\r\n              err?.message || \"Registration failed. Please try again.\"\r\n            );\r\n            break;\r\n        }\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Register error:\", error);\r\n      const message = \"Network error. Please try again.\";\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Token restoration on mount\r\n  useEffect(() => {\r\n    console.log(\"‚öôÔ∏è AuthProvider initialized...\");\r\n    const savedToken = localStorage.getItem(\"token\");\r\n    const savedUser = localStorage.getItem(\"user\");\r\n\r\n    if (savedToken && savedUser) {\r\n      try {\r\n        const decoded = jwtDecode(savedToken);\r\n        const now = Date.now();\r\n        console.log(\"üì¶ Saved token detected:\", decoded);\r\n        console.log(\"üìÜ Expiration:\", new Date(decoded.exp * 1000));\r\n\r\n        if (decoded.exp * 1000 > now) {\r\n          console.log(\"‚úÖ Token still valid, restoring session...\");\r\n          setToken(savedToken);\r\n          setUser(JSON.parse(savedUser));\r\n        } else {\r\n          console.warn(\"‚ö†Ô∏è Token expired at:\", new Date(decoded.exp * 1000));\r\n          logout(\"Token expired\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"‚ùå Token decode error:\", err);\r\n        logout(\"Invalid token\");\r\n      }\r\n    } else {\r\n      console.log(\"‚ÑπÔ∏è No token found in storage.\");\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}